<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.apple.dao.BlogMapper">
    <insert id="addBlog">
        insert into mybatis.blog
        values (#{id}, #{title}, #{author}, #{createTime}, #{views})
    </insert>

<!--===================sql片段+include  复用sql代码===============-->
    <sql id="if-title-apple">
        <if test="title != null">
            and title =#{title}
        </if>
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="author != null">
            and author = #{author}
        </if>
        <if test="views != null">
            and views = #{views}
        </if>
    </sql>

    <select id="listBlogIf" parameterType="map" resultType="blog">
        <!--		select * from mybatis.blog where 1=1-->
        <!--		<if test="title != null">-->
        <!--			and title =#{title}-->
        <!--		</if>-->
        <!--		<if test="id != null">-->
        <!--			and id = #{id}-->
        <!--		</if>-->

        <!--================或者使用where 标签-->
        select * from mybatis.blog
        <where>
            <include refid="if-title-apple">
            </include>
        </where>
    </select>

    <!--	choose ：where(可以处理多余and)+参数   只选出一种参数-->
    <select id="listBlogChoose" parameterType="map" resultType="blog">
        select *
        from mybatis.blog
        <where>
            <choose>
                <when test="title !=null">
                    and title =#{title}
                </when>
                <when test="author !=null">
                    and author =#{author}
                </when>
                <otherwise>
                    views = #{views}
                </otherwise>
            </choose>
        </where>
    </select>

<!--    使用set 更新(自动处理逗号)-->
    <update id="updateBlogSet" parameterType="map">
        update mybatis.blog
        <set>
            <include refid="if-title-apple">
            </include>
        </set>
        where id = #{id}
    </update>

<!--    使用Foreach 写where1=1 and (id=1 or id =2 or..) -->
    <select id="listBlogForeach" resultType="blog" parameterType="map">
        select *from mybatis.blog
        <where>
            <foreach collection="lists" item="i" open="and (" close=")" separator="or">
                id = #{i}
            </foreach>
        </where>
    </select>
</mapper>
